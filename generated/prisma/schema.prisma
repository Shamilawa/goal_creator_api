// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Vision {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  visionTitle       String   @map("vision_title")
  visionDescription String   @map("vision_description")
  status            Status   @default(IN_PROGRESS)
  type              Type
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  // Relationships
  goals Goal[]

  @@map("visions")
}

model Goal {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      Type
  goalTitle String   @map("goal_title")
  deadline  DateTime
  outcome   String
  status    Status   @default(IN_PROGRESS)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Foreign Keys
  visionId String @map("vision_id") @db.ObjectId

  // Relationships
  vision     Vision      @relation(fields: [visionId], references: [id])
  milestones Milestone[]

  @@map("goals")
}

model Milestone {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  type              Type
  milestoneName     String   @map("milestone_name")
  milestoneDeadline DateTime @map("milestone_deadline")
  milestoneOutcome  String   @map("milestone_outcome")
  status            Status   @default(IN_PROGRESS)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  // Foreign Keys
  goalId String @map("goal_id") @db.ObjectId

  // Relationships
  goal        Goal         @relation(fields: [goalId], references: [id])
  actionSteps ActionStep[]

  @@map("milestones")
}

model ActionStep {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  type           Type
  actionName     String   @map("action_name")
  actionDeadline DateTime @map("action_deadline")
  status         Status   @default(IN_PROGRESS)
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Foreign Keys
  milestoneId String @map("milestone_id") @db.ObjectId

  // Relationships
  milestone Milestone @relation(fields: [milestoneId], references: [id])

  @@map("action_steps")
}

enum Status {
  IN_PROGRESS @map("in-progress")
  COMPLETED   @map("completed")
  NOT_STARTED @map("not-started")
  CANCELLED   @map("cancelled")

  @@map("status")
}

enum Type {
  VISION      @map("vision")
  GOAL        @map("goal")
  MILESTONE   @map("milestone")
  ACTION_STEP @map("action_step")

  @@map("type")
}
